
//Variables
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-black: #000;
$color-grey-dark: #777;
$color-white: #fff;

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    /* 10px */
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
         rgba($color-primary-light, 0.801), 
         rgba($color-primary-dark, 0.801)), 
         url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;

    /* Starts at top left corner, top right corner, bottom right corner, bottom left corner. */
    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100% );

    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        height: 4rem;
    }

    &__text-box {
        position: absolute;
        top: 40%;
        left: 52%;
        /* 50% is no longer in relation to the parent element, but of the element itself. */
        transform: translate(-50%, -50%);
        text-align: center;
    }
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    /* Used to fix the animation shake */
    backface-visibility: hidden;
    margin-bottom: 6rem;

    &--main {
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
        margin: 0;
    
        /* animation */
        animation-name: moveInLeft;
        animation-duration: 1s;
        animation-timing-function: ease-out;
    
        /* Useful animation commands */
        /* 
            animation-delay: 3s;
            animation-iteration-count: 3;
         */
    }

    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.7rem;
    
        /* animation */
        animation-name: moveInRight;
        animation-duration: 1s;
        animation-timing-function: ease-out;
    }
}

@keyframes moveInLeft {
    /* When animation starts */
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    /* When the animation ends */
    100% {
        opacity: 1;
        /* It'll look exactly the same as it was before the animation state. */
        transform: translate(0);
    }
}

@keyframes moveInRight {
    /* When animation starts */
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    /* When the animation ends */
    100% {
        opacity: 1;
        /* It'll look exactly the same as it was before the animation state. */
        transform: translate(0);
    }
}

.btn {
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        font-size: 1.6rem;
        padding: 1.5rem 4rem;
        /* The box model will now treat this element like a block element, instead of just an inline element. Always do this if you want to give some padding or height to an element. */
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
    }

    &:hover {
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black, .2);

        &::after {
            /* This increases the element */
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }

    &:active {
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black, .2);
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        /* Puts the psuedo element behind the original button */
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }

    &--animated {
        /* animation */
        animation: moveInBottom .5s ease-out .75s;
        animation-fill-mode: backwards;
    }
}

@keyframes moveInBottom {
    /* When animation starts */
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    /* When the animation ends */
    100% {
        opacity: 1;
        /* It'll look exactly the same as it was before the animation state. */
        transform: translate(0);
    }
}